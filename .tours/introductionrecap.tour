{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "00-Introduction-Recap",
  "steps": [
    {
      "title": "Introduction Recap",
      "description": "# GitHub Copilot Introduction Recap\r\n\r\n## GitHub Copilot: \r\n\r\nGitHub Copilot is more than just a conventional coding assistant; it's an advanced AI Pair Programmer, available to developers through a seamless integration with VS Code, Visual Studio 2022, and JetBrains IDEs. By working alongside GitHub Copilot, developers are able to code more efficiently and effectively, as it anticipates their needs and offers intelligent suggestions in real time.\r\n\r\n## IDE Extension: GitHub Copilot is an extension \r\n\r\nIt's important to understand that GitHub Copilot is not a standalone application, but rather an extension that you can easily integrate into your existing Integrated Development Environment (IDE). This allows you to benefit from its features without disrupting your current workflow, providing a smooth and efficient coding experience.\r\n\r\n## Access: Access to GitHub Copilot \r\n\r\nGaining access to GitHub Copilot is a straightforward process that involves a UAM 2.0 system. Requests for access need to be submitted through the UAM process, followed by the necessary approvals before you can start enjoying the capabilities of the AI assistant in your coding endeavors.\r\n\r\n## SSO Login: Before using GitHub Copilot \r\n\r\nTo start using GitHub Copilot, every user is required to perform a secure login via Single Sign-On (SSO). This authentication step ensures that access to GitHub Copilot is not only reserved for authorized users but also that it complies with Optus' security protocols and user management policies.\r\n\r\n## Features: GitHub Copilot offers features \r\n\r\nWith GitHub Copilot, you get access to a suite of powerful features that revolutionize the way you write code. These features include real-time code completions, slash commands for quick actions, an inline chat to interact with code snippets without leaving the file, and a full-chat interface that facilitates a ChatGPT like experience, but for programming related questions. GitHub Copilot is designed to streamline your coding process, hone in on leading practices, and encourage developers to focus more on important coding tasks.\r\n"
    },
    {
      "title": "Restrictions on GitHub",
      "description": "## GitHub Restrictions at Optus\r\n\r\nDespite GitHub Copilot being part of the GitHub suite, please understand that its functionality is independent of the services provided by GitHub as a platform for source code management (SCM). Consequently, our use of GitHub Copilot does not grant you access to GitHub's repository hosting or other features.\r\n\r\n### Restricted features in GitHub:\r\n- The ability to create new repositories on GitHub is unavailable.\r\n- Cloning repositories directly from GitHub is not permitted.\r\n- Utilization of GitHub Actions for CI/CD automation is not supported.\r\n- Access to Codespaces, GitHub's online development environment, is restricted.\r\n- Any additional features exclusive to GitHub, outside of GitHub Copilot, are not accessible through our current use case and integration.\r\n\r\n\r\nWe want to remind all team members that our SCM tools of choice remain GitLab and Stash. Our integration with GitHub Copilot is solely for the purpose of enhancing your coding capabilities."
    },
    {
      "title": "Setting Expectations",
      "description": "# Setting Expectations\r\n\r\n## Not a Substitute for Code Review, Security or Code Analysis Tools\r\nWhile GitHub Copilot is an advanced code completion tool powered by an AI model that has learned from billions of lines of publicly available code, **_it is not intended to replace peer reviews, security or code analysis tools_**. \r\n\r\nIt is important to note that GitHub Copilot is capable of offering code completions, but it does not possess the capability to perform detailed analysis of an entire project for potential security vulnerabilities or code quality issues.\r\n\r\n## Embrace the Iterative Process\r\nThe interaction with GitHub Copilot is inherently **_iterative_**. As developers, you may find yourselves refining prompts or adjusting the provided suggestions to achieve the exact results you desire. This iterative process with Copilot ensures that the final code aligns with your specific objectives and quality standards.\r\n\r\n## Addressing Misconceptions\r\nGitHub Copilot **_does not automatically access your entire project or repository_**. It also does not traverse links within your code to other files without being explicitly instructed to do so. We will talk about `@workspace` later in this session on what types of assistance you can get from Copilot about your project.\r\n\r\n## It's a Coding Copilot\r\nAt its core, GitHub Copilot serves as a coding assistant â€“ a Co-pilot to support you in your software development journey.\r\n\r\nAs the leading 'Pilot,' **_you retain full responsibility for driving the project forward_**, making crucial decisions regarding the completion and quality of the code you are crafting. Consider GitHub Copilot a collaborative partner that enhances your coding efficiency while you maintain control over the final output.\r\n\r\n> A software engineer once told me \"I wish Copilot can generate an entire, production ready project with a single prompt\". I just smiled and said \"Be careful what you wish for\".\r\n"
    },
    {
      "title": "Other IDE and Language Support",
      "description": "## Expanding Beyond VS Code and Primary Languages\r\n\r\nWhile our demonstrations and tutorials may focus on leveraging GitHub Copilot within VS Code, and primarily for JavaScript and Python development, it's important to recognize the broad applicability and support of GitHub Copilot across various programming languages and IDEs.\r\n\r\n### Language Support:\r\nGitHub Copilot's AI is trained on a wide spectrum of programming languages, allowing it to provide insightful and relevant code suggestions for a diverse range of languages beyond just JavaScript and Python. In this training session, the majority of the time I will write comments or chat questions in plain english, not in a particular programming language.\r\n\r\nWhich means no matter what language you are working in, whether it's C++, Java, Ruby, Go, or others, GitHub Copilot can contribute valuable assistance to your coding process by using natural language.\r\n\r\n### IDE Compatibility:\r\nIn addition to VS Code, GitHub Copilot integrates smoothly with other popular Integrated Development Environments, including JetBrains suite (which encompasses IDEs like IntelliJ IDEA, PyCharm, WebStorm, etc.) and Visual Studio 2022. This flexibility allows you to stay within your preferred development environment while still benefiting from the AI-powered features of GitHub Copilot.\r\n\r\n### No Xcode Support (Yet)\r\nGitHub Copilot, unfortunately, does not support Xcode yet. There is a workaround, though, which we will see later on this session.\r\n\r\nWe have a good relationship with GitHub as a partner, and we'll make sure to inform Optus as soon as an announcement is made for Xcode GHCP support."
    }
  ]
}