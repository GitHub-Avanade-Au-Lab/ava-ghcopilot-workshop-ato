{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "IaC-Scripts-Samples",
  "steps": [
    {
      "title": "Introduction",
      "description": "## One Shot prompt\r\n\r\nLet's now use what we've learned on prompt crafting on GitHub Copilot Chat for creating boilerplate scripts.\r\n\r\n#### PowerShell\r\n\r\nCreate a PowerShell script that accepts a local directory path on a Windows machine and lists the size of the child folders and folder names under that path.\r\n\r\n> Open exercise\\PowerShell\\get-folder-sizes.ps1. This should be blank. Then ask copilot chat the above instructions.\r\n\r\nPress `Next` to Continue\r\n\r\n"
    },
    {
      "file": "exercise/PowerShell/get-folder-sizes.ps1",
      "description": "### Insert the Code for Copilot Chat\r\n\r\nLet's Insert to Cursor the response from Copilot chat.\r\n\r\nSave the file, then execute the following commands in the terminal:\r\n\r\n- CD to exercise\\PowerShell\r\n- .\\get-folder-sizes.ps1 -dirPath \"C:\\Projects\"\r\n\r\nObserve the result",
      "line": 1
    },
    {
      "title": "Few shot prompts",
      "description": "### Few shot prompts\r\n\r\nLet's now ask Chat with something more specific, this time with Terraform.\r\n\r\n```text\r\nI need a terraform script that provisions 2 Google Compute Engines. \r\n\r\nThe Compute Engine namesshould start with \"ghcp-demo\". \r\n\r\nApply basic VPC and Subnetworking configuration.\r\n```\r\n\r\n> Open exercise\\terraform\\ghcp-demo-vm.tf. The file should be blank.\r\n\r\nEngage Copilot by copy and pasting the Terraform instructions.\r\n\r\n#### Review and Refine\r\n\r\nNow that you have your boilerplate TF script, you can now proceed adding specific information and adjusting the configuration based on the requirements you were given."
    },
    {
      "title": "Git Commands Assistance",
      "description": "### Git Commands\r\n\r\nThere are hundreds of Git Commands out there and it is almost impossible to know them all, unless you use them frequently.\r\n\r\nWell, Copilot chat can help with that too!\r\n\r\nSimply ask clearly what you're trying to achieve and it will try to suggest the most relevant Git Command you're after.\r\n\r\nLet's try some examples:\r\n\r\n```text\r\nHow do I initial a folder with Git?\r\n```\r\n\r\n&nbsp;\r\n\r\n```text\r\nWhat is the Git Command to show all branches in my local?\r\n```\r\n\r\n&nbsp;\r\n\r\n```text\r\nHow do I delete a branch in my local?\r\n```\r\n\r\n&nbsp;\r\n\r\n```text\r\nI accidentally committed a file, but I have not pushed yet. How do I undo that?\r\n```\r\n\r\n&nbsp;\r\n\r\nOr you can also ask this...\r\n\r\n```text\r\nList all the most common git commands used by developers and provide explanation to each one.\r\n```\r\n\r\nThink of GitHub Copilot chat as your own ChatGPT that resides inside your IDE and responds primarily to IT-related questions. It can also address other technical queries, such as 'How do I design an API?' Even if you don't explicitly ask for a code suggestion, it will still respond to your requests. That's how powerful and useful Copilot chat is."
    }
  ],
  "ref": "main"
}