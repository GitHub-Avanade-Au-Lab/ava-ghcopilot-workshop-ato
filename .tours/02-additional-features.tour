{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "02-additional-features",
  "steps": [
    {
      "title": "Introduction",
      "description": "GitHub Copilot offers interactive features beyond passive code suggestions. Let's explore commands that can accelerate your workflow and handy tools for navigating your project, such as quickly locating files or functions.\r\n\r\n\r\nPress `Next` to continue ðŸ‘‡"
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "# /doc\nQuickly add documentation in the form of comments quickly just by highlighting an entire lines of code or fuction and pressing:\n\n`Ctrl-i` then typing `/doc`\n\nLet's try it out.\n\n(Switch to the unlocked demo.js)\n\nPress `Next` to continue ðŸ‘‡",
      "line": 3,
      "selection": {
        "start": {
          "line": 15,
          "character": 1
        },
        "end": {
          "line": 15,
          "character": 28
        }
      }
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "# /explain\r\nAsk Copilot to explain a code snippet or entire function by launching the inline-chat:\r\n\r\n`Ctrl-i` then typing `/explain`\r\n\r\nLet's try it out.\r\n\r\n(Switch to the unlocked demo.js)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 18
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "# /fix\r\nLet's simulate a code error by forcing syntax errors in the function and have Copilot suggest the fix by using /fix:\r\n\r\n`Ctrl-i` then typing `/fix`\r\n\r\nLet's try it out.\r\n\r\n(Switch to the unlocked demo.js)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 3
    },
    {
      "file": "complete/javascript/context.js",
      "description": "# /fix\r\nLet's try out /fix in another file, this time, using the Context Menu.\r\n\r\nRight-click the red squigly line, select Copilot, then select `Fix This`.\r\n\r\nLet's try it out.\r\n\r\n(Switch to the unlocked demo.js)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 3
    },
    {
      "title": "Time saver",
      "description": "Picture grappling with lengthy code riddled with red squiggly lines indicating errors. Typically, you'd painstakingly search for incorrect syntax, missing brackets or colons. With GitHub Copilot, however, you can quickly identify and correct issues by simply requesting assistance, potentially cutting down your debugging time."
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "# /test\r\nGitHub Copilot can also help you save time by suggesting Unit Tests for you.\r\n\r\nYou can select individual or multiple functions then launching the inline-chat:\r\n\r\nPress `Ctrl+i` then type /tests\r\n\r\nLet's try it out. It may produce some errors, but let's use Copilot to help us fix it on the fly.\r\n\r\n(Switch to the unlocked demo.js)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 3
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "Copilot will attempt to create a file that contains code to test the function performOperation.\r\n\r\nLet's see the file demo.test.js\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 14
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "Copilot will try to suggest multiple variations on how to test the function based on what it knows from the function definition\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 1
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "Let's now try if the tests are working.\r\n\r\n```bash\r\ncd to complete/javascript\r\n```\r\n\r\n```bash\r\nnode demo.test.js\r\n```\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 12
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "We get an error. But don't worry, i'll show you a sneak peek at GitHub Copilot Chat.\r\n\r\nLet's copy and paste the entire error message to Chat and see what we get from Copilot.\r\n\r\n(Click the Chat icon from the Left navigation bar)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 1
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "In case Copilot can provide the correct solution, here are the fix:\r\n\r\nat the top of demo.test.js, add \r\n```javascript\r\nconst { performOperation } = require(\"./demo.js\");\r\n```\r\n\r\nin demo.js, after the performOperation function definition, we need to export the function.\r\n\r\n```javascript\r\nmodule.exports = { performOperation };\r\n```",
      "line": 2
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "Let's run the test again.\r\n\r\n```javascript\r\nnode demo.test.js\r\n```\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 1
    },
    {
      "title": "Writing Unit Test",
      "description": "We will explore more about Writing Unit Tests with the help of Copilot later on this session.\r\n\r\nImagine you've finished crafting a feature and are ready to commit your changes. A good practice is to make small, manageable commits.\r\n\r\nFor generating commit messages with Git, GitHub Copilot can assist you. Here's how to use it:\r\n\r\n- Navigate to Git Source Control.\r\n- Look for the âœ¨ icon and click it.\r\n- Copilot will suggest a commit message based on your changes.\r\n\r\n**Remember:** If your commit includes multiple changes, Copilot will provide a suggested message that you can review and edit as needed before finalizing your commit.\r\n\r\nPress `Next` to continue ðŸ‘‡"
    }
  ],
  "ref": "main"
}