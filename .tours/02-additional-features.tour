{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "02-Additional-Features",
  "steps": [
    {
      "title": "Introduction",
      "description": "# Introduction to slash commands\r\n\r\nGitHub Copilot offers interactive features beyond passive code suggestions. Let's explore commands that can accelerate your workflow and handy tools for navigating your project, such as quickly locating files or functions.\r\n\r\n\r\nPress `Next` to continue ðŸ‘‡"
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "# /doc\nQuickly add documentation in the form of comments quickly just by highlighting an entire lines of code or fuction and pressing:\n\n`Ctrl-i` then typing `/doc`\n\nLet's try it out.\n\n(Switch to the unlocked demo.js)\n\nPress `Next` to continue ðŸ‘‡",
      "line": 3,
      "selection": {
        "start": {
          "line": 15,
          "character": 1
        },
        "end": {
          "line": 15,
          "character": 28
        }
      }
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "# /explain\r\nAsk Copilot to explain a code snippet or entire function by launching the inline-chat:\r\n\r\n`Ctrl-i` then typing `/explain`\r\n\r\nLet's try it out.\r\n\r\n(Switch to the unlocked demo.js)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 18
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "# /fix\r\nLet's simulate a code error by forcing syntax errors in the function and have Copilot suggest the fix by using /fix.\r\n\r\nI'll create syntax error by replacing `switch` with `select` in the function and ask Copilot to fix it.\r\n\r\n`Ctrl-i` then typing `/fix`\r\n\r\nLet's try it out.\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 3
    },
    {
      "file": "complete/javascript/context.js",
      "description": "# /fix\r\nLet's try out /fix in another file, this time, using the Context Menu.\r\n\r\nI'll remove the double equal sign to force a syntax error.\r\n\r\nRight-click the red squigly line, select Copilot, then select `Fix This`.\r\n\r\nLet's try it out.\r\n\r\n(Switch to the unlocked demo.js)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 3
    },
    {
      "title": "Time saver",
      "description": "## Find syntax errors faster\r\n\r\nPicture grappling with lengthy code riddled with red squiggly lines indicating errors. Typically, you'd painstakingly search for incorrect syntax, missing brackets or colons. With GitHub Copilot, however, you can quickly identify and correct issues by simply requesting assistance, potentially cutting down your debugging time."
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "# /test\r\nGitHub Copilot can also help you save time by suggesting Unit Tests for you.\r\n\r\nYou can select individual or multiple functions then launching the inline-chat:\r\n\r\nPress `Ctrl+i` then type /tests\r\n\r\nLet's try it out. It may produce some errors, but let's use Copilot to help us fix it on the fly.\r\n\r\n(Switch to the demo.js)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 3
    },
    {
      "file": "complete/javascript/demo.js",
      "description": "## Suggested Test\r\n\r\nCopilot will attempt to create a file that contains code to test the function performOperation.\r\n\r\nLet's see the file demo.test.js\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 14
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "## Multiple suggestions\r\n\r\nCopilot will try to suggest multiple variations on how to test the function based on what it knows from the function definition\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 2
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "## Run the test\r\n\r\nLet's now try if the tests are working.\r\n\r\n```bash\r\nnode complete/javascript/demo.test.js\r\n```\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 12
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "## Ask Copilot for help with errors\r\n\r\n> Due to the probabilistic nature of Copilot suggestgins, we may encounter errors.\r\n\r\nIf we get an error...\r\n\r\nLet's copy and paste the entire error message to Chat and see what we get from Copilot.\r\n\r\n(Click the Chat icon from the Left navigation bar)\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 1
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "## Not 100% guaranteed\r\n\r\nIn case Copilot is not able provide the correct solution, here are the fix:\r\n\r\nat the top of demo.test.js, add \r\n```javascript\r\nconst { performOperation } = require(\"./demo.js\");\r\n```\r\n\r\nin demo.js, after the performOperation function definition, we need to export the function.\r\n\r\n```javascript\r\nmodule.exports = { performOperation };\r\n```",
      "line": 2
    },
    {
      "file": "complete/javascript/demo.test.js",
      "description": "## Run the Test\r\nLet's run the test again.\r\n\r\nFirst option:\r\n```javascript\r\ncd complete\\javascript\r\nnode demo.test.js\r\n```\r\n\r\nOr\r\n```javascript\r\nnode complete\\javascript\\demo.test.js\r\n```\r\n\r\nPress `Next` to continue ðŸ‘‡",
      "line": 1
    },
    {
      "title": "Commit Message",
      "description": "We will explore more about Writing Unit Tests with the help of Copilot later in this session.\r\n\r\nImagine you've finished crafting a feature and are ready to commit your changes. A good practice is to make small, manageable commits.\r\n\r\nFor generating commit messages with Git, GitHub Copilot can assist you. Here's how to use it:\r\n\r\n- Navigate to Git Source Control.\r\n- Look for the âœ¨ icon and click it.\r\n- Copilot will suggest a commit message based on your changes.\r\n\r\n**Remember:** If your commit includes multiple changes, Copilot will provide a commit message based recent actions, but if you have several changes, it may not provide an accurate commit message. This is where you need to review and edit as needed before finalizing your commit.\r\n\r\nPress `Next` to continue ðŸ‘‡"
    },
    {
      "title": "Workspace Agent",
      "description": "## @Workspace\r\n\r\nThe `@workspace` is a feature within **Visual Studio Code** that leverages AI to provide context-aware assistance to developers. It is a domain expert that can answer queries related to the specific context of your project's workspace. By understanding the files, classes, and components within your workspace, it can provide relevant suggestions, navigation help, and code fixes."
    },
    {
      "title": "Find a file",
      "description": "## Ask Copilot to find a file or files based on your needs\r\n\r\nExampe: In the chat window, type the following:\r\n\r\n```text\r\n@workspace Search for python files where I can find helper functions that validates phone, email and url\r\n```\r\n\r\nHit `Enter` and see what Copilot comes back with."
    },
    {
      "title": "Analyze the project",
      "description": "# @workspace - Analyze project\r\n\r\nThe @workspace command is more than a file finder.\r\n\r\nSuppose you've just cloned a new project to work on, and you're eager to understand its core componentsâ€”like the programming languages utilized and the functionalities it provides.\r\n\r\nYou can get a quick overview by using GitHub Copilot's chat feature. Simply input the following query:\r\n\r\n```text\r\n@workspace analyze this project. Tell me the programming langauges used and the functionalities available.\r\n```\r\n\r\nLet's try it out on a different project.\r\n\r\n> Swith to nextjs-ecommerce-tempate"
    },
    {
      "title": "More Workspace Examples",
      "description": "# Open Copilot-node-calculator\r\n\r\nSwitch to the Copilot node calculator project"
    },
    {
      "title": "Open Chat in Editor",
      "description": "## Opening Chat as a Tab\r\n\r\nYou can place the Chat interface as a Tab if you need more real estate.\r\n\r\nSimple click ellipses found in the chat window. When you hover over it, a tool tip will say \"Views and More Actions...\"\r\n\r\nClick \"Open Chat in Editor\""
    },
    {
      "title": "Find a file continued",
      "description": "### @Workspace - Find\r\n\r\nExamine the response from GitHub Copilot. If it finds the file you are looking for, it will provide you a direct link that you can click and will take you straight to the file. Neat huh?\r\n\r\nClick the file and confirm if that's the one you're looking for.\r\n\r\n"
    }
  ],
  "ref": "main"
}